/***********************************************
icons.scss,
************************************************/
/*
sub-icons = a big icon with a small - normally round - icon in the right-bottom corner
Each of the sub-icons may need a individual class to adjust size and position

The structure is (BIG = the big icon, SUB = the small icon)
<div class="container-stacked-icons">
    <i class="fal fa-BIG fa-lg stacked-icon"></i>
    <i class="fas fa-circle fa-circle-small-right-bottom stacked-icon"></i>
    <i class="far fa-BIG fa-BIG-small-right-bottom stacked-icon"></i>
</div>

Different versions of sub-icons can be created using different methods in namespace fcoo.map.icon (see src/fcoo-maps-icon.js)

*/

$sub-position            : -5em / 16;
$inside-button-adjustment: 2em / 16;

$inside-big-icon-button-horizontal-adjustment: 2em / 16;
$inside-big-icon-button-vertical-adjustment  : 3.5em / 16;
$inside-big-icon-button-font-factor: .85;

$sub-icon-font-size: 0.9em;

//Adjust stacked icon container with sub-icons to be left-align
.container-stacked-icons.fa-fw.fa-sub-icons-container {
    position: relative;
    left    : -1 * $inside-button-adjustment;
};

//.fa-MAIN-small-right-bottom = the main icon
.fa-MAIN-small-right-bottom {
    //Adjust placment when inside a button
    .btn & {
        position: relative;
        right : $inside-button-adjustment;
        bottom: $inside-button-adjustment;
    }
    .btn.big-icon & {
        font-size: $inside-big-icon-button-font-factor * 1em;
        right : $inside-big-icon-button-horizontal-adjustment;
        bottom: $inside-big-icon-button-vertical-adjustment;
    }
}



//.fa-[circle/square]-small-right-bottom = background icon
.fa-circle-small-right-bottom,
.fa-square-small-right-bottom {
    position: relative;
    right    : $sub-position;
    bottom   : $sub-position;
    font-size: $sub-icon-font-size;
    //color of the icon = background-color of the button
    //color    : var(--bs-btn-bg) !important;
    color    : var(--bs-modal-bg) !important;
    text-shadow: none;

    //Inside button => use background and hover background-color from the button. Also includes color for selected and semi-selected color
    .btn & {
        color: var(--bs-btn-bg) !important;
    }

    .btn:hover & {
        color: var(--bs-btn-hover-bg) !important;
    }

    //Inside a header: Use accordion-button bg-colors
    .header-content & {
        color: var(--jb-header-bg) !important;
    }

    //Inside a footer
    .footer-content & {
        color: var(--jb-footer-bg) !important;
    }

    //Inside a accordion-header: Use accordion-button bg-colors
    .accordion-button.collapsed & {
        color: var(--bs-accordion-btn-bg) !important;
    }
    .accordion-button:not(.collapsed) & {
        color: var(--bs-accordion-active-bg) !important;
    }


    //When inside a semi-transparent button => use 'gray' color
    .semi-transparent & {
        color: rgb(230,230,230) !important;
    }

    //Adjust placment when inside a button
    .btn & {
        right : $sub-position + $inside-button-adjustment;
        bottom: $sub-position + $inside-button-adjustment;
    }
    .btn.big-icon & {
        font-size: $inside-big-icon-button-font-factor * $sub-icon-font-size;
        right : $sub-position + $inside-big-icon-button-horizontal-adjustment;
        bottom: $sub-position + $inside-big-icon-button-vertical-adjustment;
    }

}

.fa-SUB-small-right-bottom {
    position: relative;
    right    : $sub-position;
    bottom   : $sub-position;
    font-size: $sub-icon-font-size;

    //Adjust placment when inside a button
    .btn & {
        right : $sub-position + $inside-button-adjustment;
        bottom: $sub-position + $inside-button-adjustment;
    }
    //Adjust placment when inside a button with big icon
    .btn.big-icon & {
        font-size: $inside-big-icon-button-font-factor * $sub-icon-font-size;
        right : $sub-position + $inside-big-icon-button-horizontal-adjustment;
        bottom: $sub-position + $inside-big-icon-button-vertical-adjustment;
    }
}


//
// sizing icons - Copy method from
// -------------------------
@function fa-divide($dividend, $divisor, $precision: 10) {
    @return round(math.div($dividend, $divisor) * 1000) / 1000;
}
// sets relative font-sizing and alignment (in _sizing)
@mixin fa-size ($font-size) {
    font-size: fa-divide($font-size, 16) * 1em; // converts step in sizing scale into an em-based value that's relative to the scale's base
    line-height: fa-divide(1, $font-size) * 1em; // sets the line-height of the icon back to that of it's parent
    vertical-align: (fa-divide(6, $font-size) - fa-divide(3, 8)) * 1em; // vertically centers the icon taking into account the surrounding text's descender
}


.fa-size-15 { @include fa-size(15); }
.fa-size-14 { @include fa-size(14); }
.fa-size-13 { @include fa-size(13); }

